{"version":3,"sources":["features/mainPage/MainPage.module.scss","main/ui/common/sortingPanel/SortingPanel.module.scss","main/ui/common/game/Game.module.scss","features/gamePage/GamePage.module.scss","main/ui/common/platformFiltering/PlatformFiltering.module.scss","main/ui/common/searchLine/SearchLine.module.scss","main/ui/common/slider/Slider.module.scss","main/ui/App.module.scss","main/dal/api.js","main/bll/reducer.js","main/bll/store.js","main/ui/common/slider/Slider.js","features/gamePage/GamePage.js","features/gamePage/GamePageContainer.js","main/ui/common/game/Game.js","main/ui/common/ParentPlatform.js","main/ui/common/platformFiltering/PlatformFiltering.js","main/ui/common/searchLine/SearchLine.js","main/ui/common/sortingPanel/SortingPanel.js","features/mainPage/MainPage.js","main/ui/common/hooks/GetMoreGamesHook.js","features/mainPage/MainPageContainer.js","main/ui/App.js","reportWebVitals.js","index.js"],"names":["module","exports","instance","axios","create","baseURL","params","key","gameAPI","page","page_size","ordering","get","search","parent_platforms","parentPlatforms","slug","initialState","games","lastPage","isAddGames","id","name","isChecked","checkedParentPlatforms","checkedGame","checkedGameScreenshots","actions","type","payload","value","game","screenshots","fetchGames","dispatch","getState","a","res","data","results","next","rootReducer","combineReducers","state","action","map","pp","i","length","store","createStore","applyMiddleware","thunk","Slider","React","memo","useState","activeIndex","setActiveIndex","useEffect","setInterval","current","clearInterval","src","image","alt","className","classes","GamePage","block","header","to","link","description","description_raw","href","website","style","marginBottom","GamePageContainer","useDispatch","useParams","useSelector","cleanupFunction","getGameScreenshots","getGameDetails","Game","props","history","useHistory","onClick","push","background","back","heading4","releasedAndRating","released","rating","ParentPlatform","checked","setParentPlatformChecked","onChange","e","currentTarget","PlatformFiltering","platformsVisibleHandler","chooseCheckedParentPlatformsHandler","wrapper","allPlatforms","button","SearchLine","lineValue","setLineValue","lineBlock","lineInput","target","lineButton","SortingPanel","sortingVisibleHandler","sortGames","inputHandler","panel","itemsBlock","item","MainPage","getMoreGames","isPlatformsVisible","searchGamesHandler","isSortingVisible","isFuncHeader","funcHeaderHandler","ref","useRef","observer","IntersectionObserver","isIntersecting","root","rootMargin","threshold","observe","unobserve","GetMoreGamesHook","blockWithHeadingAndSorting","heading","funcHeader","Button","buttonE","gameBlock","g","background_image","metacritic","padding","MainPageContainer","setIsPlatformsVisible","setIsSortingVisible","setIsFuncHeader","useCallback","fetchOrderedGames","App","display","path","exact","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e782d19d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"MainPage_block__1iErS\",\"blockWithHeadingAndSorting\":\"MainPage_blockWithHeadingAndSorting__HtXfT\",\"heading\":\"MainPage_heading__3sOPl\",\"buttonE\":\"MainPage_buttonE__lUpGx\",\"funcHeader\":\"MainPage_funcHeader__28dAX\",\"Button\":\"MainPage_Button__LCdbX\",\"gameBlock\":\"MainPage_gameBlock__2e1R7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SortingPanel_wrapper__1NelC\",\"panel\":\"SortingPanel_panel__22P01\",\"itemsBlock\":\"SortingPanel_itemsBlock__24155\",\"item\":\"SortingPanel_item__uDT65\",\"button\":\"SortingPanel_button__2aYby\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Game_block__3W_dN\",\"back\":\"Game_back__21I4q\",\"description\":\"Game_description__1hIbk\",\"heading4\":\"Game_heading4__1AkXt\",\"releasedAndRating\":\"Game_releasedAndRating__2_BF3\",\"released\":\"Game_released__32Kti\",\"rating\":\"Game_rating__3X4pJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"GamePage_block__3uiz6\",\"header\":\"GamePage_header__2NMcz\",\"link\":\"GamePage_link__KKIep\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PlatformFiltering_wrapper__oQxEG\",\"allPlatforms\":\"PlatformFiltering_allPlatforms__39QRN\",\"block\":\"PlatformFiltering_block__1ic3U\",\"button\":\"PlatformFiltering_button__3NDFB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lineBlock\":\"SearchLine_lineBlock__42HR0\",\"lineInput\":\"SearchLine_lineInput__20Gdx\",\"lineButton\":\"SearchLine_lineButton__2Lzow\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"Slider_image__1d1lr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"display\":\"App_display__1sgrU\"};","import axios from \"axios\";\r\nconst instance = axios.create({\r\n    baseURL: \"https://api.rawg.io/api\",\r\n    params: {\r\n        key: \"79d35934fcc04ca2ab10df0014b83ba0\" \r\n    }\r\n});\r\n\r\nexport const gameAPI = {\r\n    getGames(page, page_size, ordering) {\r\n        return instance.get(`games`, {\r\n            params: {\r\n                page,\r\n                page_size,\r\n                ordering\r\n            }\r\n        });\r\n    },\r\n    searchGames(page, page_size, search, parent_platforms) {\r\n        const parentPlatforms = parent_platforms ? {parent_platforms} : {}\r\n        return instance.get(`games`, {\r\n            params: {\r\n                page,\r\n                page_size,\r\n                search,\r\n                ...parentPlatforms\r\n            }\r\n        });\r\n    },\r\n    getGameDetails(slug) {\r\n        return instance.get(`games/${slug}`);\r\n    },\r\n    getGameScreenshots(slug) {\r\n        return instance.get(`games/${slug}/screenshots`);\r\n    }\r\n};","import { gameAPI } from \"../dal/api\";\r\n\r\nconst initialState = {\r\n    games: [],\r\n    lastPage: 0,\r\n    isAddGames: true,\r\n    parentPlatforms: [\r\n        {id: \"1\", name: \"PC\", isChecked: false},\r\n        {id: \"2\", name: \"Play Station\", isChecked: false},\r\n        {id: \"3\", name: \"Xbox\", isChecked: false},\r\n        {id: \"4\", name: \"iOS\", isChecked: false},\r\n        {id: \"5\", name: \"Apple Macintosh\", isChecked: false},\r\n        {id: \"6\", name: \"Linux\", isChecked: false},\r\n        {id: \"7\", name: \"Nintendo\", isChecked: false},\r\n        {id: \"8\", name: \"Android\", isChecked: false},\r\n        {id: \"9\", name: \"Atari\", isChecked: false},\r\n        {id: \"10\", name: \"Commodore / Amiga\", isChecked: false},\r\n        {id: \"11\", name: \"SEGA\", isChecked: false},\r\n        {id: \"12\", name: \"3DO\", isChecked: false},\r\n        {id: \"13\", name: \"Neo Geo\", isChecked: false},\r\n        {id: \"14\", name: \"Web\", isChecked: false}\r\n    ],\r\n    checkedParentPlatforms: \"\",\r\n    checkedGame: null,\r\n    checkedGameScreenshots: []\r\n};\r\n\r\nexport const gameReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'GAMES/SET_GAMES':\r\n            return {\r\n                ...state, \r\n                games: [...state.games, ...action.payload.games],\r\n                lastPage: action.payload.page,\r\n                isAddGames: action.payload.isAddGames\r\n            };\r\n        case 'GAMES/SET_GAMES_AFTER_SEARCHING_AND_SORTING':\r\n            return {\r\n                ...state,\r\n                games: [...action.payload.games],\r\n                lastPage: action.payload.page,\r\n                isAddGames: action.payload.isAddGames\r\n            };\r\n        case 'GAMES/SET_PARENT_PLATFORM_CHECKED':\r\n            return {\r\n                ...state, \r\n                parentPlatforms: state.parentPlatforms.map(pp => {\r\n                    if(pp[\"id\"] === action.payload.id) {\r\n                        return {...pp, isChecked: action.payload.value}\r\n                    }\r\n                    return pp\r\n                })\r\n            };\r\n        case 'GAMES/CHOOSE_CHECKED_PARENT_PLATFORMS':\r\n            let parentPlatforms = action.payload.parentPlatforms\r\n            let checkedParentPlatforms = action.payload.checkedParentPlatforms\r\n            for (let i = 0; i < parentPlatforms.length; i++) {\r\n                if (parentPlatforms[i].isChecked === true) {\r\n                    if(!checkedParentPlatforms.length) {\r\n                        checkedParentPlatforms += parentPlatforms[i].id\r\n                    } else {\r\n                        checkedParentPlatforms += \",\" + parentPlatforms[i].id\r\n                    }\r\n                }\r\n            };\r\n            return {\r\n                ...state,\r\n                checkedParentPlatforms: checkedParentPlatforms\r\n            };\r\n        case 'GAMES/SET_GAME_DETAILS':\r\n            return {\r\n                ...state,\r\n                checkedGame: action.payload\r\n            };\r\n        case 'GAMES/SET_GAME_SCREENSHOTS':\r\n            return {\r\n                ...state,\r\n                checkedGameScreenshots: action.payload\r\n            };\r\n        case 'GAMES/CLEAR_GAME_SCREENSHOTS':\r\n            return {\r\n                ...state,\r\n                checkedGameScreenshots: []\r\n            };\r\n        default: \r\n            return state;\r\n    };\r\n};\r\n\r\nexport const actions = {\r\n    setGames: (games, page, isAddGames) => ({type: 'GAMES/SET_GAMES', payload: {\r\n        games, page, isAddGames\r\n    }}),\r\n    setGamesAfterSearchingAndSorting: (games, page, isAddGames) => ({type: 'GAMES/SET_GAMES_AFTER_SEARCHING_AND_SORTING', payload: {\r\n        games, page, isAddGames\r\n    }}),\r\n    setParentPlatformChecked: (id, value) => ({type: 'GAMES/SET_PARENT_PLATFORM_CHECKED', payload: {\r\n        id, value\r\n    }}),\r\n    chooseCheckedParentPlatforms: (parentPlatforms, checkedParentPlatforms) => ({type: 'GAMES/CHOOSE_CHECKED_PARENT_PLATFORMS', payload: {\r\n        parentPlatforms, checkedParentPlatforms\r\n    }}),\r\n    setGameDetails: (game) => ({type: 'GAMES/SET_GAME_DETAILS', payload: game}),\r\n    setGameScreenshots: (screenshots) => ({type: 'GAMES/SET_GAME_SCREENSHOTS', payload: screenshots}),\r\n    clearGameScreenshots: () => ({type: 'GAMES/CLEAR_GAME_SCREENSHOTS'})\r\n};\r\n\r\nexport const fetchGames = () => {\r\n    return async (dispatch, getState) => {\r\n        let lastPage = getState().games.lastPage;\r\n        let res = await gameAPI.getGames(lastPage + 1, 15);\r\n        dispatch(actions.setGames(res.data.results, lastPage + 1, !!res.data.next));\r\n    };\r\n};\r\n\r\nexport const searchGames = (search) => {\r\n    return async (dispatch, getState) => {\r\n        let parent_platforms = getState().games.checkedParentPlatforms;\r\n        let res = await gameAPI.searchGames(1, 15, search, parent_platforms);\r\n        dispatch(actions.setGamesAfterSearchingAndSorting(res.data.results, 0, !!res.data.next));\r\n    };\r\n};\r\n\r\nexport const fetchOrderedGames = (ordering) => {\r\n    return async (dispatch) => {\r\n        let res = await gameAPI.getGames(1, 100, ordering);\r\n        dispatch(actions.setGamesAfterSearchingAndSorting(res.data.results, 1, !!res.data.next));\r\n    };\r\n};\r\n\r\nexport const getGameDetails = (slug) => {\r\n    return async (dispatch) => {\r\n        let res = await gameAPI.getGameDetails(slug);\r\n        dispatch(actions.setGameDetails(res.data));\r\n    };\r\n};\r\n\r\nexport const getGameScreenshots = (slug) => {\r\n    return async (dispatch) => {\r\n        let res = await gameAPI.getGameScreenshots(slug);\r\n        dispatch(actions.setGameScreenshots(res.data.results));\r\n    };\r\n};","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { gameReducer } from \"./reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    games: gameReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))","import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport classes from \"./Slider.module.scss\";\r\n\r\nexport const Slider = React.memo(({checkedGameScreenshots}) => {\r\n    const [activeIndex, setActiveIndex] = useState(0);\r\n\r\n    useEffect( () => {\r\n        // debugger\r\n        setInterval( () => {\r\n            setActiveIndex((current) => \r\n                current === checkedGameScreenshots.length - 1 ? 0 : current + 1\r\n            );\r\n        }, 5000);\r\n        return () => clearInterval();\r\n    }, [checkedGameScreenshots]);\r\n\r\n    return <div>\r\n        <img \r\n            src={checkedGameScreenshots[activeIndex].image} \r\n            alt={'some screenshot'} \r\n            className={classes.image} \r\n        />\r\n    </div>;\r\n});","import classes from \"./GamePage.module.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Slider } from \"../../main/ui/common/slider/Slider\";\r\n\r\nexport const GamePage = ({checkedGame, checkedGameScreenshots}) => {\r\n    \r\n    return <div className={classes.block}>\r\n        <div className={classes.header}>\r\n            <h1>{checkedGame.name}</h1>\r\n            <Link to=\"/\" className={classes.link} >\r\n                &larr; Back to catalog\r\n            </Link>\r\n        </div>\r\n        <Slider checkedGameScreenshots={checkedGameScreenshots} />\r\n        <h2>About:</h2>\r\n        <p className={classes.description}>{checkedGame.description_raw}</p>\r\n        <a href={checkedGame.website} className={classes.link} style={{marginBottom: \"10px\"}}>Go to website</a>\r\n    </div>;\r\n};","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useParams } from \"react-router\";\r\nimport { actions, getGameDetails, getGameScreenshots } from \"../../main/bll/reducer\";\r\nimport { GamePage } from \"./GamePage\"\r\n\r\nexport const GamePageContainer = () => {\r\n    const dispatch = useDispatch();\r\n    const {slug} = useParams();\r\n\r\n    const checkedGame = useSelector(state => state.games.checkedGame);\r\n    const checkedGameScreenshots = useSelector(state => state.games.checkedGameScreenshots);\r\n\r\n    useEffect( () => {\r\n        let cleanupFunction = false;\r\n\r\n        if (!cleanupFunction) {\r\n            dispatch(actions.clearGameScreenshots());\r\n            dispatch(getGameScreenshots(slug));\r\n            dispatch(getGameDetails(slug));\r\n        }\r\n\r\n        return () => cleanupFunction = true;\r\n        \r\n        // eslint-disable-next-line\r\n    }, [slug])\r\n\r\n    if (!checkedGame || !checkedGameScreenshots.length) {\r\n        return <div>Game loading...</div>\r\n    }\r\n\r\n    return <div>\r\n        <GamePage \r\n            checkedGame={checkedGame}\r\n            checkedGameScreenshots={checkedGameScreenshots} \r\n        />\r\n    </div>\r\n};","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport classes from \"./Game.module.scss\";\r\n\r\nexport const Game = React.memo((props) => {\r\n    const history = useHistory();\r\n\r\n    const CardRedirectHandler = () => {\r\n        history.push(`/game/${props.slug}`);\r\n    };\r\n\r\n    return <div className={classes.block} onClick={CardRedirectHandler}>\r\n        <img \r\n            src={props.background}\r\n            alt={'background'}\r\n            className={classes.back}\r\n        />\r\n        <div className={classes.description}>\r\n            <div className={classes.heading4}>\r\n                {props.name}\r\n            </div>\r\n            <div className={classes.releasedAndRating}>\r\n                <div className={classes.released}>{props.released}</div>\r\n                {props.rating && <div className={classes.rating}>{props.rating}</div>}\r\n            </div>\r\n        </div>\r\n    </div>\r\n})","export const ParentPlatform = ({id, checked, setParentPlatformChecked, name}) => {\r\n    \r\n    const setParentPlatformCheckedHandler = (e) => {\r\n        setParentPlatformChecked(id, e.currentTarget.checked);\r\n    }\r\n\r\n    return <div>\r\n        <input\r\n            type={\"checkbox\"}\r\n            name={\"platrformParant\"}\r\n            id={id}\r\n            checked={checked}\r\n            onChange={setParentPlatformCheckedHandler}\r\n        />\r\n        {name}\r\n    </div>\r\n}","import classes from \"./PlatformFiltering.module.scss\"\r\nimport {ParentPlatform} from \"./../ParentPlatform\";\r\n\r\nexport const PlatformFiltering = ({platformsVisibleHandler, parentPlatforms, setParentPlatformChecked,\r\n    chooseCheckedParentPlatformsHandler}) => {\r\n    const buttonHandler = () => {\r\n        platformsVisibleHandler();\r\n        chooseCheckedParentPlatformsHandler();\r\n    };\r\n    \r\n    return <div className={classes.wrapper}>\r\n        <div className={classes.allPlatforms}>\r\n            <div className={classes.block}>\r\n                {parentPlatforms.map(pp => <ParentPlatform\r\n                    key={pp.id}\r\n                    id={pp.id} \r\n                    checked={pp.isChecked} \r\n                    name={pp.name} \r\n                    setParentPlatformChecked={setParentPlatformChecked} \r\n                />)}\r\n            </div>\r\n            <button \r\n                onClick={buttonHandler}\r\n                className={classes.button}\r\n            >\r\n                &times;\r\n            </button>\r\n        </div>\r\n    </div>\r\n}","import classes from \"./SearchLine.module.scss\";\r\n\r\nexport const SearchLine = ({lineValue, setLineValue}) => {\r\n    const setLineValueHandler = (e) => {\r\n        setLineValue(e.target.value);\r\n    };\r\n\r\n    const clearLineHandler = () => {\r\n        setLineValue(\"\");\r\n    };\r\n\r\n    return <div className={classes.lineBlock}>\r\n        <input \r\n            className={classes.lineInput}\r\n            type={'text'}\r\n            value={lineValue}\r\n            onChange={setLineValueHandler}\r\n        />\r\n        <button \r\n            className={classes.lineButton}\r\n            onClick={clearLineHandler}\r\n        >\r\n           &times; \r\n        </button>\r\n    </div>\r\n};","import classes from \"./SortingPanel.module.scss\"\r\n\r\nexport const SortingPanel = ({sortingVisibleHandler, sortGames}) => {\r\n\r\n    const inputHandler = (e) => {\r\n        sortGames(e.currentTarget.value);\r\n    };\r\n\r\n    return <div className={classes.wrapper}>\r\n        <div className={classes.panel}>\r\n            <div className={classes.itemsBlock}>\r\n                <div className={classes.item}>\r\n                    <input \r\n                        type={\"radio\"}\r\n                        name={\"sorting\"}\r\n                        value={\"rating\"}\r\n                        onClick={inputHandler}\r\n                    />Max rating\r\n                </div>\r\n                <div className={classes.item}>\r\n                    <input \r\n                        type={\"radio\"}\r\n                        name={\"sorting\"}\r\n                        value={\"-rating\"}\r\n                        onClick={inputHandler}\r\n                    />Min rating\r\n                </div>\r\n                <div className={classes.item}>\r\n                    <input \r\n                        type={\"radio\"}\r\n                        name={\"sorting\"}\r\n                        value={\"released\"}\r\n                        onClick={inputHandler}\r\n                    />New\r\n                </div>\r\n                <div className={classes.item}>\r\n                    <input \r\n                        type={\"radio\"}\r\n                        name={\"sorting\"}\r\n                        value={\"-released\"}\r\n                        onClick={inputHandler}\r\n                    />Old\r\n                </div>\r\n            </div>\r\n            <button \r\n                onClick={sortingVisibleHandler}\r\n                className={classes.button}\r\n            >\r\n                &times;\r\n            </button>\r\n        </div>\r\n    </div>\r\n}","import React from \"react\";\r\nimport { Game } from \"../../main/ui/common/game/Game\";\r\nimport { GetMoreGamesHook } from \"../../main/ui/common/hooks/GetMoreGamesHook\";\r\nimport { PlatformFiltering } from \"../../main/ui/common/platformFiltering/PlatformFiltering\";\r\nimport { SearchLine } from \"../../main/ui/common/searchLine/SearchLine\";\r\nimport { SortingPanel } from \"../../main/ui/common/sortingPanel/SortingPanel\";\r\nimport classes from \"./MainPage.module.scss\";\r\n\r\nexport const MainPage = React.memo(({games, isAddGames, getMoreGames, \r\n    isPlatformsVisible, platformsVisibleHandler, lineValue, \r\n    setLineValue, setParentPlatformChecked, searchGamesHandler, \r\n    parentPlatforms, chooseCheckedParentPlatformsHandler, isSortingVisible,\r\n    sortingVisibleHandler, sortGames, isFuncHeader, funcHeaderHandler}) => {\r\n    \r\n    const {ref} = GetMoreGamesHook({isAddGames, getMoreGames})\r\n\r\n    return <div className={classes.block}>\r\n        <div className={classes.blockWithHeadingAndSorting}>\r\n            <h1 className={classes.heading}>Game display</h1>\r\n            {!isFuncHeader \r\n                ? <button onClick={funcHeaderHandler} className={classes.buttonE}>&#9776;</button>\r\n                : <div className={classes.funcHeader}>\r\n                    {!isPlatformsVisible \r\n                        ? <button onClick={platformsVisibleHandler} className={classes.Button}>Choose platforms</button>\r\n                        : <PlatformFiltering \r\n                            platformsVisibleHandler={platformsVisibleHandler}\r\n                            setParentPlatformChecked={setParentPlatformChecked}\r\n                            chooseCheckedParentPlatformsHandler={chooseCheckedParentPlatformsHandler}\r\n                            parentPlatforms={parentPlatforms}\r\n                        />\r\n                    }\r\n                    <SearchLine \r\n                        lineValue={lineValue} \r\n                        setLineValue={setLineValue} \r\n                    />\r\n                    <button \r\n                        onClick={searchGamesHandler}\r\n                        className={classes.Button}\r\n                    >\r\n                        Search\r\n                    </button>\r\n                    {!isSortingVisible\r\n                        ? <button \r\n                            onClick={sortingVisibleHandler}\r\n                            className={classes.Button}\r\n                        >\r\n                            Sorting\r\n                        </button>\r\n                        : <SortingPanel\r\n                            sortingVisibleHandler={sortingVisibleHandler}\r\n                            sortGames={sortGames}\r\n                        />\r\n                    }\r\n                    <button onClick={funcHeaderHandler} className={classes.buttonE}>\r\n                        &times;\r\n                    </button>\r\n            </div>\r\n            }\r\n            \r\n        </div>\r\n        <div className={classes.gameBlock}>\r\n            { !games.length \r\n                ? `Something goes wrong...` \r\n                : games.map(g => <Game\r\n                    key={g.id}\r\n                    background={g.background_image}\r\n                    rating={g.metacritic}\r\n                    name={g.name}\r\n                    released={g.released}\r\n                    slug={g.slug}\r\n                />)\r\n            }\r\n            {isAddGames && <div ref={ref} style={{padding: \"5px\"}}/>}\r\n        </div>\r\n    </div>\r\n})\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nexport const GetMoreGamesHook = ({isAddGames, getMoreGames}) => {\r\n    const ref = useRef();\r\n\r\n    useEffect( () => {\r\n        const observer = new IntersectionObserver(\r\n            ([entry]) => {\r\n                if (entry.isIntersecting) {\r\n                    getMoreGames();\r\n                }\r\n            },\r\n            {\r\n                root: null,\r\n                rootMargin: \"0px\",\r\n                threshold: 0.1\r\n            }\r\n        );\r\n\r\n        if (ref.current) {\r\n            observer.observe(ref.current);\r\n        }\r\n\r\n        return () => {\r\n            if (ref.current) {\r\n                // eslint-disable-next-line\r\n                observer.unobserve(ref.current);\r\n            }\r\n        };\r\n        // eslint-disable-next-line\r\n    }, [ref, isAddGames, getMoreGames]);\r\n\r\n    return {ref}\r\n};","import { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchGames, searchGames, actions, fetchOrderedGames} from \"../../main/bll/reducer\";\r\nimport { MainPage } from \"./MainPage\";\r\n\r\nexport const MainPageContainer = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {games, isAddGames, parentPlatforms, checkedParentPlatforms} = useSelector(state => state.games);\r\n\r\n    const [isPlatformsVisible, setIsPlatformsVisible] = useState(false);\r\n    const [lineValue, setLineValue] = useState(\"\");\r\n    const [isSortingVisible, setIsSortingVisible] = useState(false);\r\n    const [isFuncHeader, setIsFuncHeader] = useState(false);\r\n\r\n    useEffect( () => {\r\n        if(games.length) {\r\n            dispatch(fetchGames());\r\n            \r\n        }\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const getMoreGames = useCallback(() => {\r\n        if (isAddGames) {\r\n            dispatch(fetchGames());\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [isAddGames]);\r\n\r\n    const funcHeaderHandler = () => {\r\n        setIsFuncHeader(!isFuncHeader);\r\n    };\r\n\r\n    const platformsVisibleHandler = useCallback(() => {\r\n        setIsPlatformsVisible(!isPlatformsVisible);\r\n    }, [isPlatformsVisible]);\r\n\r\n    const setParentPlatformChecked = (id, value) => {\r\n        dispatch(actions.setParentPlatformChecked(id, value));\r\n    };\r\n\r\n    const chooseCheckedParentPlatformsHandler = () => {\r\n        dispatch(actions.chooseCheckedParentPlatforms(parentPlatforms, checkedParentPlatforms));\r\n    };\r\n\r\n    const searchGamesHandler = () => {\r\n        dispatch(searchGames(lineValue));\r\n    };\r\n\r\n    const sortingVisibleHandler = () => {\r\n        setIsSortingVisible(!isSortingVisible);\r\n    };\r\n\r\n    const sortGames = (ordering) => {\r\n        dispatch(fetchOrderedGames(ordering));\r\n    };\r\n\r\n    return <MainPage\r\n        games={games}\r\n        isAddGames={isAddGames}\r\n        getMoreGames={getMoreGames}\r\n        isFuncHeader={isFuncHeader}\r\n        funcHeaderHandler={funcHeaderHandler}\r\n        isPlatformsVisible={isPlatformsVisible}\r\n        platformsVisibleHandler={platformsVisibleHandler}\r\n        lineValue={lineValue}\r\n        setLineValue={setLineValue}\r\n        parentPlatforms={parentPlatforms}\r\n        setParentPlatformChecked={setParentPlatformChecked}\r\n        chooseCheckedParentPlatformsHandler={chooseCheckedParentPlatformsHandler}\r\n        searchGamesHandler={searchGamesHandler}\r\n        isSortingVisible={isSortingVisible}\r\n        sortingVisibleHandler={sortingVisibleHandler}\r\n        sortGames={sortGames}\r\n    />;\r\n};","import { Switch, Route } from \"react-router-dom\";\nimport { GamePageContainer } from \"../../features/gamePage/GamePageContainer\";\nimport { MainPageContainer } from \"../../features/mainPage/MainPageContainer\";\nimport classes from \"./App.module.scss\";\n\nconst App = () => {\n        \n    return <div className={classes.display}>\n        <Switch>\n            <Route path={'/'} exact render={() => <MainPageContainer/>} />\n            <Route path={'/game/:slug'} render={() => <GamePageContainer/>} />\n            <Route path={'*'} render={ () => <div>404 NOT FOUND</div>} />\n        </Switch>\n    </div>\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport './index.scss';\nimport { store } from './main/bll/store';\nimport App from './main/ui/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}